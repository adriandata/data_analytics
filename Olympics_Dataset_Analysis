#@title
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import statsmodels.api as sm
from scipy import stats
from patsy import dmatrices
from pylab import rcParams
from scipy.stats import f_oneway
from scipy.stats import ttest_ind
from numpy import median
import warnings
import statsmodels.stats.api as sms
import scipy.stats as st
%matplotlib inline
warnings.filterwarnings("ignore")
rcParams['figure.figsize'] = 20,10
rcParams['font.size'] = 30
sns.set()

from google.colab import drive

drive.mount('/content/gdrive')
print('Files uploaded, ready to code')

#@title
athletes = pd.read_csv('/content/gdrive/My Drive/Thinkful/Capstone 3/Olympic Data/athlete_events.csv')

def find_outliers_IQR(df):
   q1=df.quantile(0.25)
   q3=df.quantile(0.75)
   IQR=q3-q1
   outliers = df[((df<(q1-1.5*IQR)) | (df>(q3+1.5*IQR)))]
   return outliers

def plot_distribution(inp):
    plt.figure()
    ax = sns.displot(inp)
    plt.axvline(np.mean(inp), color='k', linestyle='dashed', linewidth=5)
    _, max_ = plt.ylim()
    plt.text(
        inp.mean() + inp.mean() / 10,
        max_ - max_ / 10,
        "Mean: {:.2f}".format(inp.mean()),
    )
    return plt.figure

def compare_2_groups(arr_1, arr_2, alpha, sample_size):
    stat, p = ttest_ind(arr_1, arr_2)
    print('Statistics=%.3f, p=%.3f' % (stat, p))
    if p > alpha:
        print('Same distributions, we fail to reject the Null Hypothesis')
    else:
        print('Different distributions, we reject the Null hypothesis')

<h1 style="color:Blue;font-size:40px;">Olympics Dataset Analysis</h1>

